on:

  push:
    branches:
      - main

name: Checkout and Create Release Version

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get version
        id: get-version
        run: |
          version=$(cat VERSION)
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Prepare files
        run: |
          mkdir -p opt
          echo $(date) > opt/data.log
      
      - name: Create Tag
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a ${{ steps.get-version.outputs.version }} -m "Release Version ${{ steps.get-version.outputs.version }}" || echo "Tag already exists"
          git push origin ${{ steps.get-version.outputs.version }} || echo "Tag already exists"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        run: |
          gh release create ${{ steps.get-version.outputs.version }} --notes "Release ${{ steps.get-version.outputs.version }}" || echo "Release already exists"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Private Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.GITEA_SSH_KEY }}

      - name: Check Gitea
        run: |
          ssh -o StrictHostKeyChecking=no git@gitea.com || echo ""
          rm -rf .git
          git clone --depth=1 git@gitea.com:wojiushixiaobai/test-repo.git
          mv opt/* test-repo/
          cd test-repo
          git add .
          git commit -m "Release Version ${{ steps.get-version.outputs.version }}"
          git tag -a ${{ steps.get-version.outputs.version }} -m "Release Version ${{ steps.get-version.outputs.version }}"
          git push origin ${{ steps.get-version.outputs.version }}
          
